import sys
sys.stdin = open('14500_input.txt')

# 5가지 테트로미노 모양을 회전시켜 만들 수 있는 모든 모양의 경우를
# 시작점(0, 0)을 기준으로의 위치를 만들기.
tetromino = [
        ((0, 0), (0, 1), (0, 2), (0, 3)),     # ㅡ, ㅣ
         ((0, 0),
          (1, 0),
          (2, 0),
          (3, 0)),

         ((0, 0), (0, 1),   # ㅁ
          (1, 0), (1, 1)),

         ((0, 0), (1, 0), (2, 0), (2, 1)),      # ㄴ
         ((0, 0), (1, 0), (2, 0), (2, -1)),
         ((0, 0), (0, 1), (1, 0), (2, 0)),
         ((0, -1), (0, 0), (1, 0), (2, 0)),
         ((0, 0), (0, 1), (0, 2), (1, 2)),
         ((0, 0), (0, 1), (0, 2), (1, 0)),
         ((0, 0), (1, 0), (1, 1), (1, 2)),
         ((0, 0), (0, 1), (0, 2), (-1, 2)),

         ((0, 0),
          (1, 0), (1, 1),   # ㅏ
          (2, 0)),
         ((0, 0),
          (1, 0), (1, -1),      # ㅓ
          (2, 0)),
         ((0, 0), (0, 1), (0, 2),   # ㅜ
          (1, 1)),
         ((0, 0), (0, 1), (0, 2),   # ㅗ
         (-1, 1)),

         ((0, 0), (0, 1), (1, 1), (1, 2)),    # ㄹ
         ((0, 0), (1, 0), (1, 1), (2, 1)),
         ((0, 0), (1, 0), (1, -1), (2, -1)),
         ((0, 0), (0, 1), (-1, 1), (-1, 2))
         ]

# main
N, M = map(int, input().split())
A = [list(map(int, input().split())) for _ in range(N)]

MAX = float('-inf')
for i in range(N):
    for j in range(M):
        for tetro in tetromino:
            temp = 0
            for r, c in tetro:
                nr = i + r
                nc = j + c
                if not (0 <= nr < N and 0 <= nc < M):
                    break
                temp += A[nr][nc]
            # print(temp)
            MAX = max(MAX, temp)

print(MAX)
